namespace VoiceProcessor.Filters;

// Generated by ChatGPT. I am clueless about this one. 
public class BiQuadFilter
{
    private float _a0, _a1, _a2, _b1, _b2;
    private float _z1, _z2;

    private BiQuadFilter()
    {
    }

    public static BiQuadFilter PeakingEq(int sampleRate, float frequency, float q, float gainDb)
    {
        var filter = new BiQuadFilter();

        float A = (float)Math.Pow(10, gainDb / 40); // dB to linear gain
        float omega = 2.0f * (float)Math.PI * frequency / sampleRate;
        float sinOmega = (float)Math.Sin(omega);
        float cosOmega = (float)Math.Cos(omega);
        float alpha = sinOmega / (2.0f * q);

        float b0 = 1 + alpha * A;
        float b1 = -2 * cosOmega;
        float b2 = 1 - alpha * A;
        float a0 = 1 + alpha / A;
        float a1 = -2 * cosOmega;
        float a2 = 1 - alpha / A;

        // Normalize by a0
        filter._a0 = b0 / a0;
        filter._a1 = b1 / a0;
        filter._a2 = b2 / a0;
        filter._b1 = a1 / a0;
        filter._b2 = a2 / a0;

        filter._z1 = filter._z2 = 0f;
        return filter;
    }

    public float Process(float inSample)
    {
        float outSample = _a0 * inSample + _z1;
        _z1 = _a1 * inSample - _b1 * outSample + _z2;
        _z2 = _a2 * inSample - _b2 * outSample;
        return outSample;
    }

    public void Reset()
    {
        _z1 = _z2 = 0f;
    }
}